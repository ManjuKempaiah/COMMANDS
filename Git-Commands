  501  git init
  502  git clone https://github.com/ManjuKempaiah/git-book.git
  503  cd git-book
  504  code .
  505  git status
  505  git add courses.txt
  506  git add *
  508  git commit -m 'commit_message'
  509  git push origin main

  511  git restore <file_name>
  517  git restore --staged <file_name>
  518  git status
  519  git commit -a -m 'commit_message'
  520  git log
  521  git log --oneline
  521  git log --oneline -10  ---> To display recent 10 commits
  522  git log --oneline <branch_name>

  522  git reset 7a1559d
  527  git reset --soft 7a1559d
  531  git reset --mixed 7a1559d
  534  git reset --hard 7a1559d

  543  git revert 0a1b7f1
  543  Esc:wq
  543  git push origin main

  555  git branch feature2
  556  git checkout feature2
  561  git push origin feature2
  562  git branch -d feature2
  563  git checkout main
  564  git branch -d feature2
  565  git pull origin main
  566  git branch -d feature2


  568  git stash -m 'stash_message'
  569  git stash list
  570  git stash apply
  572  git stash pop
  576  git stash drop

  594  git branch --merged main
  595  git branch --no-merged
  596  git branch --merged
  599  git merge feature3

  606  git commit --amend
  607  git push -f
  609  git push origin -d <remote_branch_name>
  611  git reflog
  612  git checkout b723967
  613  git checkout -b feature5
  623  git cherry-pick 40baed2
  624  git branch -r
  625  git branch -l
       rm -r .git
       git update-ref -d HEAD
       git branch --contains <commit_id>
       git config --global user.name "user_name"
       git config --global user.email "user_email"
       git branch -m main
       git fetch --all

       git branch <branch_name> commitid
       git rebase -i HEAD~n
       git log --since=10days
       git log --since=2hours

       
       git cherry-pick commit_id
       git stash -m 'stashing abc'
       git commit --amend
       git branch --merged main
       git branch --no-merged
       git branch --merged
       git branch --contains commit_id
       git fetch --no-checkout origin <remote_branch_name>
       git pull <remote_branch_name> --path_to-file
       git rebase -i head~n
       git update-ref -d HEAD
       git log --oneline main
       git log --oneline -5
       git log --since=30days
       git annotate filename
       git blame filename
       git reflog
       


       git branch
       git branch branch_name
       git checkout branch_name
       git branch -m newbranch_name
       git branch -d branch_name
       git push origin -d remote_branch_name
       git push origin --delete remote_branch_name
       git checkout -b newbranch_name
       git branch branch_name commit_id
       git branch -l
       git branch -r

---------------------------------------------------

cherry-pick commit abc123 from origin/feature-branch into local main:

git fetch origin
git log <source-branch> --oneline
git checkout main
git cherry-pick abc123

---------------------------------------------------

To cherry-pick a commit from one local branch to another local branch

git log <source-branch> --oneline
git checkout main
git cherry-pick abc123

---------------------------------------------------

If you want to cherry-pick commit abc123 from origin/feature-branch to origin/main:
(Remot branch to remote branch)

git fetch origin
git checkout -b local-main origin/main
git cherry-pick abc123
git push origin local-main:main

----------------------------------------------------

git reset --soft commit_id --- Remove the commit and keep changes in staging area

git rest commit_id          }
git reset --mixed commit_id }  Remove the commit and keep changes in working area

git reset --hard commit_id --- Remove the commit and permanently discard changes

------------------------------------------------------









